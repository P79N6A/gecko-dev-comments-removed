#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH		= @DEPTH@
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= xpcom
LIBRARY_NAME	= xpcomds_s
GRE_MODULE	= 1
LIBXUL_LIBRARY	= 1
MOZILLA_INTERNAL_API = 1


CPPSRCS		= \
		nsArray.cpp \
		nsAtomTable.cpp \
		nsAtomService.cpp \
		nsByteBuffer.cpp \
		nsCRT.cpp \
		nsHashPropertyBag.cpp \
		nsHashtable.cpp \
		nsINIParserImpl.cpp \
		nsObserverList.cpp \
		nsObserverService.cpp \
		nsProperties.cpp \
		nsPersistentProperties.cpp \
		nsStaticNameTable.cpp \
		nsStringEnumerator.cpp \
		nsSupportsArray.cpp \
		nsSupportsArrayEnumerator.cpp \
		nsSupportsPrimitives.cpp \
		nsUnicharBuffer.cpp \
		nsVariant.cpp \
		$(NULL)

ifdef HAVE_CLOCK_MONOTONIC
CPPSRCS += TimeStamp_posix.cpp
else ifeq ($(OS_ARCH),Darwin)
CPPSRCS += TimeStamp_darwin.cpp
else ifeq ($(OS_ARCH),WINNT)
CPPSRCS += TimeStamp_windows.cpp
else
$(error No TimeStamp implementation on this platform.  Build will not succeed)
endif

EXPORTS_NAMESPACES = mozilla

EXPORTS_mozilla = \
  CharTokenizer.h \
  TimeStamp.h \
  StringBuilder.h \
  $(NULL)

ifeq ($(OS_ARCH),WINNT)
EXPORTS_mozilla += \
  TimeStamp_windows.h \
  $(NULL)
endif

EXPORTS		= \
		nsArray.h \
		nsAtomService.h \
		nsCheapSets.h \
		nsCppSharedAllocator.h \
		nsCRT.h \
		nsExpirationTracker.h \
		nsHashtable.h \
		nsIByteBuffer.h \
		nsIUnicharBuffer.h \
		nsMathUtils.h \
		nsObserverList.h \
		nsObserverService.h \
		nsStaticNameTable.h \
		nsStaticAtom.h \
		nsSupportsArray.h \
		nsSupportsPrimitives.h \
		nsVariant.h \
		nsStringEnumerator.h \
		nsHashPropertyBag.h \
		nsWhitespaceTokenizer.h \
		nsCharSeparatedTokenizer.h \
		$(NULL)			

ifeq ($(OS_ARCH),WINNT)
CPPSRCS += nsWindowsRegKey.cpp
EXPORTS += nsWindowsRegKey.h
endif

EXTRA_COMPONENTS = \
  nsINIProcessor.js \
  nsINIProcessor.manifest \
  $(NULL)

# we don't want the shared lib, but we want to force the creation of a static lib.
FORCE_STATIC_LIB = 1


include $(topsrcdir)/config/rules.mk

LOCAL_INCLUDES += -I$(srcdir)/../io

DEFINES		+= -D_IMPL_NS_COM
