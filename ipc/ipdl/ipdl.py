































import optparse, os, re, sys
from cStringIO import StringIO

import ipdl

def log(minv, fmt, *args):
    if _verbosity >= minv:
        print >>sys.stderr, fmt % args



op = optparse.OptionParser(usage='ipdl.py [options] IPDLfiles...')
op.add_option('-d', '--output-dir', dest='outputdir', default='.',
              help='Directory in which to put generated headers')
op.add_option('-I', '--include', dest='includedirs', action='append',
              help='Additional directory to search for included protocol specifications')
op.add_option('-v', '--verbose', dest='verbosity', default=1, action='count',
              help='Verbose logging (specify -vv or -vvv for very verbose logging)')
op.add_option('-q', '--quiet', dest='verbosity', action='store_const', const=0,
              help="Suppress logging output")

options, files = op.parse_args()
_verbosity = options.verbosity
codedir = options.outputdir
includedirs = [ os.path.abspath(incdir) for incdir in options.includedirs ]

if not len(files):
    op.error("No IPDL files specified")

log(1, 'Generated headers will be placed in "%s"', codedir)

allprotocols = []

for f in files:
    log(1, 'Parsing specification %s', f)
    if f == '-':
        fd = sys.stdin
        filename = '<stdin>'
    else:
        fd = open(f)
        filename = f

    specstring = fd.read()
    fd.close()

    ast = ipdl.parse(specstring, filename, includedirs=includedirs)

    allprotocols.append,('%sProtocolMsgStart' % ast.protocol.name)

    log(2, 'checking types')
    if not ipdl.typecheck(ast):
        print >>sys.stderr, 'Specification is not well typed.'
        sys.exit(1)

    if _verbosity > 2:
        log(3, '  pretty printed code:')
        ipdl.genipdl(ast, codedir)

    ipdl.gencxx(ast, codedir)

allprotocols.sort()

ipcmsgstart = StringIO()

print >>ipcmsgstart, """
// CODE GENERATED by ipdl.py. Do not edit.

enum IPCMessageStart {
"""

for name in allprotocols:
    print >>ipcmsgstart, "  %s," % name

print >>ipcmsgstart, """
  LastMsgIndex
};
"""

ipdl.writeifmodified(ipcmsgstart.getvalue(),
                     os.path.join(codedir, 'IPCMessageStart.h'))
