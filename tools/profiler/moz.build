# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

if CONFIG['MOZ_ENABLE_PROFILER_SPS']:
    FAIL_ON_WARNINGS = not CONFIG['_MSC_VER']

    LIBXUL_LIBRARY = True
    EXPORT_LIBRARY = True

    MODULE = 'profiler'
    LIBRARY_NAME = 'profiler'
    XPIDL_SOURCES += [
        'nsIProfiler.idl',
        'nsIProfileSaveEvent.idl',
    ]
    EXPORTS += [
        'GeckoProfilerFunc.h',
        'GeckoProfilerImpl.h',
        'ProfilerMarkers.h',
        'PseudoStack.h',
        'shared-libraries.h',
    ]
    EXTRA_JS_MODULES = [
        'Profiler.jsm',
    ]
    SOURCES += [
        'BreakpadSampler.cpp',
        'IOInterposer.cpp',
        'JSCustomObjectBuilder.cpp',
        'JSObjectBuilder.cpp',
        'local_debug_info_symbolizer.cc',
        'NSPRInterposer.cpp',
        'nsProfiler.cpp',
        'nsProfilerFactory.cpp',
        'platform.cpp',
        'ProfileEntry.cpp',
        'ProfilerBacktrace.cpp',
        'ProfilerIOInterposeObserver.cpp',
        'ProfilerMarkers.cpp',
        'SaveProfileTask.cpp',
        'SyncProfile.cpp',
        'TableTicker.cpp',
        'UnwinderThread2.cpp',
    ]

    if CONFIG['OS_TARGET'] in ('Android', 'Linux'):
        SOURCES += [
            'platform-linux.cc',
            'shared-libraries-linux.cc',
        ]
        if CONFIG['CPU_ARCH'] == 'arm':
            SOURCES += [
                'EHABIStackWalk.cpp',
            ]
    elif CONFIG['OS_TARGET'] == 'Darwin':
        SOURCES += [
            'platform-macos.cc',
            'shared-libraries-macos.cc',
        ]
        SOURCES += [
            'shim_mac_dump_syms.mm',
        ]
    elif CONFIG['OS_TARGET'] == 'WINNT':
        SOURCES += [
            'platform-win32.cc',
            'shared-libraries-win32.cc',
        ]

    LOCAL_INCLUDES += [
        '/ipc/chromium/src',
        '/mozglue/linker',
        '/toolkit/crashreporter/google-breakpad/src',
    ]

    # We need access to Breakpad's getcontext(3) which is suitable for Android
    if CONFIG['OS_TARGET'] == 'Android':
        LOCAL_INCLUDES += [
            '/toolkit/crashreporter/google-breakpad/src/common/android/include',
        ]

    if CONFIG['ANDROID_CPU_ARCH'] == 'armeabi':
        DEFINES['ARCH_ARMV6'] = True

EXPORTS += [
    'GeckoProfiler.h',
]

EXPORTS.mozilla += [
    'IOInterposer.h',
]

XPCSHELL_TESTS_MANIFESTS += ['tests/xpcshell.ini']
