# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

TEST_DIRS += ['tests']

XPIDL_SOURCES += [
    'nsCExternalHandlerService.idl',
    'nsIContentDispatchChooser.idl',
    'nsIExternalHelperAppService.idl',
    'nsIExternalProtocolService.idl',
    'nsIExternalSharingAppService.idl',
    'nsIExternalURLHandlerService.idl',
    'nsIHandlerService.idl',
    'nsIHelperAppLauncherDialog.idl',
]

MODULE = 'exthandler'

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'os2':
    osdir = 'os2'
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
    osdir = 'win'
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'cocoa':
    osdir = 'win'
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'android':
    osdir = 'android'
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'gonk':
    osdir = 'gonk'
else:
    osdir = 'unix'

EXPORTS += [
    osdir + '/nsOSHelperAppService.h'
]

EXPORTS += [
    'nsExternalHelperAppService.h',
]

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'android':
    EXPORTS += [ '%s/%s' % (osdir, f) for f in [
        'nsExternalSharingAppService.h',
        'nsExternalURLHandlerService.h',
    ]]

if CONFIG['MOZ_ENABLE_MEEGOTOUCHSHARE']:
    EXPORTS += [
        osdir + '/nsExternalSharingAppService.h',
    ]

EXPORTS.mozilla.dom += [
    'ExternalHelperAppChild.h',
    'ExternalHelperAppParent.h',
]

CPP_SOURCES += [
    'ExternalHelperAppChild.cpp',
    'ExternalHelperAppParent.cpp',
    'nsExternalHelperAppService.cpp',
    'nsExternalProtocolHandler.cpp',
    'nsLocalHandlerApp.cpp',
    'nsMIMEInfoImpl.cpp',
]

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'cocoa':
    CMMSRCS += [
        'nsLocalHandlerAppMac.mm',
        'nsMIMEInfoMac.mm',
        'nsOSHelperAppService.mm',
    ]
else:
    CPP_SOURCES += [
        osdir + '/nsOSHelperAppService.cpp',
    ]

if CONFIG['MOZ_ENABLE_GTK']:
    CPP_SOURCES += [
        'unix/nsGNOMERegistry.cpp',
        'unix/nsMIMEInfoUnix.cpp',
    ]
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'android':
    CPP_SOURCES += [
        'android/nsAndroidHandlerApp.cpp',
        'android/nsExternalSharingAppService.cpp',
        'android/nsExternalURLHandlerService.cpp',
        'android/nsMIMEInfoAndroid.cpp',
    ]
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'qt':
    CPP_SOURCES += [
        'unix/nsGNOMERegistry.cpp',
        'unix/nsMIMEInfoUnix.cpp',
    ]
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
    CPP_SOURCES += [
        'win/nsMIMEInfoWin.cpp',
    ]
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'os2':
    CPP_SOURCES += [
        'os2/nsMIMEInfoOS2.cpp',
    ]

if CONFIG['MOZ_ENABLE_DBUS']:
    CPP_SOURCES += [
        'nsDBusHandlerApp.cpp',
    ]

if CONFIG['MOZ_ENABLE_MEEGOTOUCHSHARE']:
    CPP_SOURCES += [
        'unix/nsMeegoExternalSharingAppService.cpp',
    ]

if CONFIG['MOZ_ENABLE_CONTENTACTION']:
    CPP_SOURCES += [
        'nsContentHandlerApp.cpp',
    ]

EXTRA_COMPONENTS += [
    'nsHandlerService.js',
    'nsHandlerService.manifest',
    'nsWebHandlerApp.js',
    'nsWebHandlerApp.manifest',
]

IPDL_SOURCES += [
    'PExternalHelperApp.ipdl',
]

FAIL_ON_WARNINGS = True

LIBXUL_LIBRARY = True

LIBRARY_NAME = 'exthandler_s'

