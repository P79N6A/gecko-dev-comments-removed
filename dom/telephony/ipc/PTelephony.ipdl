/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 ts=8 et ft=cpp : */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PContent;
include protocol PTelephonyRequest;
include TelephonyTypes;

namespace mozilla {
namespace dom {
namespace telephony {

sync protocol PTelephony {
  manager PContent;
  manages PTelephonyRequest;

child:
  NotifyCallError(int32_t aCallIndex, nsString aError);

  NotifyCallStateChanged(IPCCallStateData aData);

  NotifyCdmaCallWaiting(nsString aNumber);

  NotifyConferenceCallStateChanged(uint16_t aCallState);

  NotifySupplementaryService(int32_t aCallIndex, uint16_t aNotification);

parent:
  /**
   * Sent when the child no longer needs to use PTelephony.
   */
  __delete__();

  /**
   * Sent when the child makes an asynchronous request to the parent.  It's
   * currently only for request call enumeration.
   */
  PTelephonyRequest();

  RegisterListener();

  UnregisterListener();

  DialCall(nsString aNumber, bool aIsEmergency);

  HangUpCall(uint32_t aCallIndex);

  AnswerCall(uint32_t aCallIndex);

  RejectCall(uint32_t aCallIndex);

  HoldCall(uint32_t aCallIndex);

  ResumeCall(uint32_t aCallIndex);

  ConferenceCall();

  SeparateCall(uint32_t aCallIndex);

  HoldConference();

  ResumeConference();

  StartTone(nsString aTone);

  StopTone();

  sync GetMicrophoneMuted()
    returns (bool aMuted);

  SetMicrophoneMuted(bool aMuted);

  sync GetSpeakerEnabled()
    returns (bool aEnabled);

  SetSpeakerEnabled(bool aEnabled);
};

} /* namespace telephony */
} /* namespace dom */
} /* namespace mozilla */
