/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

%{C++
namespace mozilla {
namespace dom {
namespace indexedDB {
class FileInfo;
class FileManager;
}
}
}

%}

[ptr] native FileInfo(mozilla::dom::indexedDB::FileInfo);
[ptr] native FileManager(mozilla::dom::indexedDB::FileManager);

interface nsIDOMFileError;
interface nsIInputStream;
interface nsIURI;
interface nsIPrincipal;
interface nsIDOMBlob;

[scriptable, builtinclass, uuid(6ef56697-7c9c-41ac-83df-e01c079fb1d1)]
interface nsIDOMBlob : nsISupports
{
  readonly attribute unsigned long long size;
  readonly attribute DOMString type;

  [noscript] readonly attribute nsIInputStream internalStream;

  [optional_argc] nsIDOMBlob slice([optional] in long long start,
                                   [optional] in long long end,
                                   [optional] in DOMString contentType);

  // Get internal id of stored file. Returns -1 if it is not a stored file.
  // Intended only for testing. It can be called on any thread.
  [notxpcom] long long getFileId();

  // Called when the blob was successfully stored in a database or when
  // the blob is initialized from a database. It can be called on any thread.
  [notxpcom] void addFileInfo(in FileInfo aFileInfo);

  // Called before the blob is stored in a database to decide if it can be
  // shared or needs to be copied. It can be called on any thread.
  [notxpcom] FileInfo getFileInfo(in FileManager aFileManager);

  // Return true if this blob is a memory file.
  [notxpcom] bool isMemoryFile();
};

// We want to avoid multiple inheritance of nsIDOMBlob so we can downcast from
// nsIDOMBlob to Blob safely.  Our chain is:
//  - Blob -> nsIDOMBlob
//  - File -> nsIDOMFile and Blob
[scriptable, builtinclass, uuid(26e292a6-f5aa-4560-b523-ae22a4c7dfca)]
interface nsIDOMFile : nsISupports
{
  // Empty interface used by addons and some test to check if the object is a
  // blob or file. This interface will be removed by bug 1163388
};
