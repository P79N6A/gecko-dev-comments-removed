



















#if !defined(_O_THEORA_THEORAENC_H_)
# define _O_THEORA_THEORAENC_H_ (1)
# include <stddef.h>
# include <ogg/ogg.h>
# include "codec.h"

#if defined(__cplusplus)
extern "C" {
#endif























#define TH_ENCCTL_SET_HUFFMAN_CODES (0)












#define TH_ENCCTL_SET_QUANT_PARAMS (2)












#define TH_ENCCTL_SET_KEYFRAME_FREQUENCY_FORCE (4)



























#define TH_ENCCTL_SET_VP3_COMPATIBLE (10)













#define TH_ENCCTL_GET_SPLEVEL_MAX (12)













#define TH_ENCCTL_SET_SPLEVEL (14)













#define TH_ENCCTL_GET_SPLEVEL (16)

























#define TH_ENCCTL_SET_DUP_COUNT (18)



















#define TH_ENCCTL_SET_RATE_FLAGS (20)

























#define TH_ENCCTL_SET_RATE_BUFFER (22)





























#define TH_ENCCTL_2PASS_OUT (24)













































#define TH_ENCCTL_2PASS_IN (26)















#define TH_ENCCTL_SET_QUALITY (28)




















#define TH_ENCCTL_SET_BITRATE (30)







































#define TH_ENCCTL_SET_COMPAT_CONFIG (32)











#define TH_RATECTL_DROP_FRAMES   (0x1)







#define TH_RATECTL_CAP_OVERFLOW  (0x2)






#define TH_RATECTL_CAP_UNDERFLOW (0x4)





extern const th_quant_info TH_VP31_QUANT_INFO;


extern const th_huff_code
 TH_VP31_HUFF_CODES[TH_NHUFFMAN_TABLES][TH_NDCT_TOKENS];










typedef struct th_enc_ctx    th_enc_ctx;





























extern th_enc_ctx *th_encode_alloc(const th_info *_info);








extern int th_encode_ctl(th_enc_ctx *_enc,int _req,void *_buf,size_t _buf_sz);

















extern int th_encode_flushheader(th_enc_ctx *_enc,
 th_comment *_comments,ogg_packet *_op);






















extern int th_encode_ycbcr_in(th_enc_ctx *_enc,th_ycbcr_buffer _ycbcr);























extern int th_encode_packetout(th_enc_ctx *_enc,int _last,ogg_packet *_op);


extern void th_encode_free(th_enc_ctx *_enc);





#if defined(__cplusplus)
}
#endif

#endif
