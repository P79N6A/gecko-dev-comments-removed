# Tests for opentype font feature control (bug 511339)
#
# These rely on the Linux Libertine font (loaded via @font-face)
# to ensure that features are present.

# check that Turkish language causes a change in rendering (no fi ligature)
# (also works via Pango)
skip-if(B2G) HTTP(..) != font-features-turkish.html font-features-ref.html # bug 773482

# check that disabling ligatures causes a change
HTTP(..) != font-features-noliga.html font-features-ref.html

# check that enabling optional ligatures causes a change
HTTP(..) != font-features-hlig.html font-features-ref.html

# compare Turkish rendering with reference using ZWNJ to break the ligature
# (also works via Pango)
fails-if(d2d) HTTP(..) == font-features-turkish.html font-features-turkish-ref.html

# compare Turkish rendering with explicitly disabled ligatures
HTTP(..) == font-features-turkish.html font-features-noliga.html

# The following should pass even if feature support isn't available,
# because both testcase and reference will have the default rendering,
# though they're not really meaningful unless the tests above passed already.

# compare feature specified within @font-face to same feature in style rule
HTTP(..) == font-features-hlig-2.html font-features-hlig.html
HTTP(..) == font-features-hlig-4.html font-features-hlig.html
HTTP(..) != font-features-hlig-5.html font-features-hlig.html

# check that feature in style rule overrides @font-face
skip-if(B2G) HTTP(..) == font-features-hlig-3.html font-features-noliga.html # bug 773482

# make sure old syntax usage never interferes with new syntax usage
HTTP(..) == font-features-oldsyntax-1.html font-features-ref.html
HTTP(..) == font-features-oldsyntax-2.html font-features-ref.html
HTTP(..) == font-features-oldsyntax-3.html font-features-hlig.html
HTTP(..) == font-features-oldsyntax-4.html font-features-hlig.html

# compare -moz-font-language-override rendering to lang-tagged rendering
skip-if(B2G) HTTP(..) == font-features-turkish-override-1.html font-features-turkish.html # bug 773482
HTTP(..) == font-features-turkish-override-2.html font-features-turkish.html

# check use of -moz-font-language-override to override explicit lang tag
HTTP(..) == font-features-turkish-override-3.html font-features-ref.html
HTTP(..) == font-features-turkish-override-4.html font-features-ref.html
skip-if(B2G) HTTP(..) == font-features-turkish-override-5.html font-features-turkish.html # bug 773482

# check that last value wins if a feature is repeated
HTTP(..) == font-features-order-1.html font-features-ref.html
HTTP(..) == font-features-order-2.html font-features-noliga.html

# sanity check for kerning - with no spaces, kerning should occur
HTTP(..) == kerning-sanity-check-kern.html kerning-sanity-check-default.html
HTTP(..) != kerning-sanity-check-nokern.html kerning-sanity-check-default.html

# OpenType features should work across inter-word spaces
HTTP(..) == font-features-across-space-1.html font-features-across-space-1-ref.html
# requires Japanese font with feature support, WinXP lacks one
random-if(!winWidget&&!cocoaWidget) fails-if(/^Windows\x20NT\x205\.1/.test(http.oscpu)) HTTP(..) == fwid-spaces.html fwid-spaces-ref.html
# Arial/Times New Roman on Win7+/OSX 10.6+ have kerning pairs that include spaces
random-if(!winWidget&&!cocoaWidget) fails-if(winWidget||cocoaWidget) random-if(/^Windows\x20NT\x205\.1/.test(http.oscpu)) HTTP(..) != kerning-spaces-arial-nokern.html kerning-spaces-arial-default.html
random-if(!winWidget&&!cocoaWidget) fails-if(winWidget||cocoaWidget) random-if(/^Windows\x20NT\x205\.1/.test(http.oscpu)) HTTP(..) == kerning-spaces-arial-kern.html kerning-spaces-arial-default.html
random-if(!winWidget&&!cocoaWidget) fails-if(winWidget||cocoaWidget) random-if(/^Windows\x20NT\x205\.1/.test(http.oscpu)) HTTP(..) != kerning-spaces-tnr-nokern.html kerning-spaces-tnr-default.html
random-if(!winWidget&&!cocoaWidget) fails-if(winWidget||cocoaWidget) random-if(/^Windows\x20NT\x205\.1/.test(http.oscpu)) HTTP(..) == kerning-spaces-tnr-kern.html kerning-spaces-tnr-default.html

