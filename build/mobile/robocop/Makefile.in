# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH       = @DEPTH@
topsrcdir   = @top_srcdir@
srcdir      = @srcdir@
VPATH       = @srcdir@

mobile-tests := mobile/android/base/tests
TESTPATH     := $(topsrcdir)/$(mobile-tests)

include $(DEPTH)/config/autoconf.mk

MODULE = robocop

ROBOTIUM_PATH = $(srcdir)/robotium-solo-3.3.jar

JAVAFILES = \
  R.java \

_JAVA_HARNESS = \
  Actions.java \
  Assert.java \
  Driver.java \
  Element.java \
  FennecInstrumentationTestRunner.java \
  FennecNativeActions.java \
  FennecMochitestAssert.java \
  FennecTalosAssert.java \
  FennecNativeDriver.java \
  FennecNativeElement.java \
  RoboCopException.java \
  PaintedSurface.java \
  $(NULL)

# CURDIR   := $(DEPTH)/build/mobile/robocop
dir-res   := $(CURDIR)/res
dir-tests := $(DEPTH)/$(mobile-tests)

# preprocessing deps
java-harness      := $(addprefix $(srcdir)/,$(addsuffix .in,$(_JAVA_HARNESS)))
java-harness-dep  := $(addprefix $(CURDIR)/,$(_JAVA_HARNESS))
java-harness_PATH := $(CURDIR)
PP_TARGETS        += java-harness

java-tests-src  := $(wildcard $(TESTPATH)/*.java.in)
java-tests-dep  := $(patsubst $(TESTPATH)/%.java.in,$(dir-tests)/%.java,$(java-tests-src))
java-tests      := $(java-tests-src)
java-tests_PATH := $(dir-tests)
PP_TARGETS      += java-tests

PP_TARGETS        += manifest
manifest          := $(srcdir)/AndroidManifest.xml.in
manifest_TARGET   := AndroidManifest.xml

MOCHITEST_ROBOCOP_FILES := \
  $(wildcard $(TESTPATH)/*.html) \
  $(wildcard $(TESTPATH)/*.sjs) \
  $(NULL)

GARBAGE += \
  AndroidManifest.xml \
  $(java-tests) \
  $(_JAVA_HARNESS) \
  classes.dex \
  robocop.apk \
  robocop.ap_ \
  robocop-unsigned-unaligned.apk \
  robocop-unaligned.apk \
  $(NULL)

DEFINES += \
  -DANDROID_PACKAGE_NAME=$(ANDROID_PACKAGE_NAME) \
  $(NULL)

GARBAGE_DIRS += res

JAVA_CLASSPATH = $(ANDROID_SDK)/android.jar:$(ROBOTIUM_PATH)

include $(topsrcdir)/config/rules.mk

# Override rules.mk java flags with the android specific ones
include $(topsrcdir)/config/android-common.mk

tools:: robocop.apk

classes.dex: robocop.ap_
classes.dex: $(call mkdir_deps,classes)
classes.dex: $(java-harness-dep)
classes.dex: $(java-tests-dep)
	$(JAVAC) $(JAVAC_FLAGS) -d classes $(JAVAFILES) $(_JAVA_HARNESS) $(java-tests-dep)
	$(DX) --dex --output=$@ classes $(ROBOTIUM_PATH) $(ANDROID_COMPT_LIB)

robocop.ap_: AndroidManifest.xml $(TESTPATH)/assets/*
	$(AAPT) package -f -M $< -I $(ANDROID_SDK)/android.jar -I . -S res -A $(TESTPATH)/assets -F $@ -J ./

robocop.apk: robocop.ap_ classes.dex

export:: $(call mkdir_deps,$(dir-res))
	$(call copy_dir,$(srcdir)/res,$(dir-res))
