







%filter substitution
%define selectedBorderColor rgb(217,217,217)
%define hoverAndFocusBorderColor rgb(125,162,206)
%define selectedFocusBorderColor rgb(132,172,221)
%define hoverBorderColor rgb(184,214,251)
%define whiteOpacityBorderColor rgba(255,255,255,.4)
%define whiteOpacityBottomBorderColor rgba(255,255,255,.6)
%define selectedGradientColor1 rgba(190,190,190,.1)
%define selectedGradientColor2 rgba(190,190,190,.4)
%define selectedFocusGradientColor1 rgba(131,183,249,.16)
%define selectedFocusGradientColor2 rgba(131,183,249,.375)
%define hoverAndCurrentFocusGradientColor1 rgba(131,183,249,.28)
%define hoverAndCurrentFocusGradientColor2 rgba(131,183,249,.5)
%define hoverGradientColor1 rgba(131,183,249,.05)
%define hoverGradientColor2 rgba(131,183,249,.16)

@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");



tree {
  margin: 0px 4px;
  border: 2px solid;
  -moz-border-top-colors: ThreeDShadow ThreeDDarkShadow;
  -moz-border-right-colors: ThreeDHighlight ThreeDLightShadow;
  -moz-border-bottom-colors: ThreeDHighlight ThreeDLightShadow;
  -moz-border-left-colors: ThreeDShadow ThreeDDarkShadow;
  background-color: -moz-Field;
  color: -moz-FieldText;
  -moz-appearance: listbox;
}



.focusring > .tree-stack > .tree-rows > .tree-bodybox {
  border: 1px solid transparent;  
}

.focusring:-moz-focusring > .tree-stack > .tree-rows > .tree-bodybox {
  border: 1px solid #000000;
}




treechildren::-moz-tree-row {
  border: 1px solid transparent;
  min-height: 18px;
  height: 1.3em;
}

treechildren::-moz-tree-row(selected) {
  background-color: -moz-cellhighlight;
}

treechildren::-moz-tree-row(selected, focus) {
  background-color: Highlight;
}

treechildren::-moz-tree-row(current, focus) {
  border: 1px dotted Highlight;
}

treechildren::-moz-tree-row(selected, current, focus) {
  border: 1px dotted #F3D982;
}

tree[seltype="cell"] > treechildren::-moz-tree-row,
tree[seltype="text"] > treechildren::-moz-tree-row {
  border: none;
  background-color: transparent;
  background-image: none;
}



treechildren::-moz-tree-cell {
  padding: 0px 2px 0px 2px;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell-text,
tree[seltype="text"] > treechildren::-moz-tree-cell-text,
treechildren::-moz-tree-cell-text {
  color: inherit;
}

treechildren::-moz-tree-cell-text(selected) {
  color: -moz-cellhighlighttext;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell {
  border: 1px solid transparent;
  padding: 0px 1px 0px 1px;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text {
  border: 1px solid transparent;
  padding: 0px 1px 1px 1px;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, selected) {
  background-color: -moz-cellhighlight;
}
tree[seltype="cell"] > treechildren::-moz-tree-cell-text(active, selected) {
  color: -moz-cellhighlighttext;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected) {
  background-color: -moz-cellhighlight;
  color: -moz-cellhighlighttext;
}

treechildren::-moz-tree-cell-text(selected, focus) {
  color: HighlightText;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, selected, focus) {
  background-color: Highlight;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected, focus) {
  background-color: Highlight;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell-text(active, selected, focus) {
  color: HighlightText;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected, focus) {
  color: HighlightText;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, current, focus) {
  border: 1px dotted #000000;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, current, focus) {
  border: 1px dotted #000000;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, selected, current, focus) {
  border: 1px dotted #C0C0C0;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected, current, focus) {
  border: 1px dotted #C0C0C0;
}



tree[seltype="cell"] > treechildren::-moz-tree-line,
tree[seltype="text"] > treechildren::-moz-tree-line,
treechildren::-moz-tree-line {
  border: 1px dotted ThreeDShadow;
}

tree[seltype="cell"] > treechildren::-moz-tree-line(active, selected, focus),
treechildren::-moz-tree-line(selected, focus) {
  border: 1px dotted HighlightText;
}



treechildren::-moz-tree-separator {
  border-top: 1px solid ThreeDShadow;
  border-bottom: 1px solid ThreeDHighlight;
}




treechildren::-moz-tree-row(dropOn) {
  background-color: Highlight;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell-text(primary, dropOn),
tree[seltype="text"] > treechildren::-moz-tree-cell-text(primary, dropOn),
treechildren::-moz-tree-cell-text(primary, dropOn) {
  color: HighlightText;
}

treechildren::-moz-tree-drop-feedback {
  background-color: Highlight;
  width: 50px;
  height: 2px;
  -moz-margin-start: 5px;
}



treechildren::-moz-tree-progressmeter {
  margin: 2px 4px;
  padding: 1px;
  border: 1px solid;
  border-top-color: ThreeDShadow;
  border-right-color: ThreeDHighlight;
  border-bottom-color: ThreeDHighlight;
  border-left-color: ThreeDShadow;
  background-color: -moz-Dialog;
  color: ThreeDShadow;
}

treechildren::-moz-tree-progressmeter(progressUndetermined) {
  list-style-image: url("chrome://global/skin/progressmeter/progressmeter-busy.gif");
}

treechildren::-moz-tree-cell-text(progressmeter) {
  margin: 2px 4px;
}



treecol,
treecolpicker {
  -moz-appearance: treeheadercell;
  -moz-box-align: center;
  -moz-box-pack: center;
  border: 2px solid;
  -moz-border-top-colors: ThreeDHighlight ThreeDLightShadow;
  -moz-border-right-colors: ThreeDDarkShadow ThreeDShadow;
  -moz-border-bottom-colors: ThreeDDarkShadow ThreeDShadow;
  -moz-border-left-colors: ThreeDHighlight ThreeDLightShadow;
  background-color: -moz-Dialog;
  color: -moz-DialogText;
  padding: 0px 4px;
}

.treecol-image {
  padding: 0px 1px;
}

.treecol-text {
  margin: 0px !important;
}

treecol[hideheader="true"] {
  -moz-appearance: none;
  border: none;
  padding: 0;
}



treecol:hover:active,
treecolpicker:hover:active {
  border-top: 2px solid;
  border-right: 1px solid;
  border-bottom: 1px solid;
  border-left: 2px solid;
  -moz-border-top-colors: ThreeDShadow -moz-Dialog;
  -moz-border-right-colors: ThreeDShadow;
  -moz-border-bottom-colors: ThreeDShadow;
  -moz-border-left-colors: ThreeDShadow -moz-Dialog;
  padding-top: 1px;
  padding-bottom: 0px;
  -moz-padding-start: 5px;
  -moz-padding-end: 4px;
}

.treecol-image:hover:active {
  padding-top: 1px;
  padding-bottom: 0px;
  -moz-padding-start: 2px;
  -moz-padding-end: 1px;
}



treecol[dragging="true"] {
  -moz-border-top-colors: ThreeDDarkShadow transparent !important;
  -moz-border-right-colors: ThreeDDarkShadow transparent!important;
  -moz-border-bottom-colors: ThreeDDarkShadow transparent !important;
  -moz-border-left-colors: ThreeDDarkShadow transparent !important;
  background-color: ThreeDShadow !important;
  color: ThreeDHighlight !important;
}

treecol[insertafter="true"]:-moz-locale-dir(ltr),
treecol[insertbefore="true"]:-moz-locale-dir(rtl) {
  -moz-border-right-colors: ThreeDDarkShadow ThreeDShadow;
}

treecol[insertafter="true"]:-moz-locale-dir(rtl),
treecol[insertbefore="true"]:-moz-locale-dir(ltr) {
  -moz-border-left-colors: ThreeDDarkShadow ThreeDShadow;
}

treechildren::-moz-tree-column(insertbefore) {
  -moz-border-start: 1px solid ThreeDShadow;
}

treechildren::-moz-tree-column(insertafter) {
  -moz-border-end: 1px solid ThreeDShadow;
}



.treecol-sortdirection {
  list-style-image: none;
}

treecol:not([hideheader="true"]) > .treecol-sortdirection[sortDirection="ascending"] {
  list-style-image: url("chrome://global/skin/tree/sort-asc.png");
}

treecol:not([hideheader="true"]) > .treecol-sortdirection[sortDirection="ascending"]:-moz-system-metric(windows-classic) {
  list-style-image: url("chrome://global/skin/tree/sort-asc-classic.png");
}

treecol:not([hideheader="true"]) > .treecol-sortdirection[sortDirection="descending"] {
  list-style-image: url("chrome://global/skin/tree/sort-dsc.png");
}

treecol:not([hideheader="true"]) > .treecol-sortdirection[sortDirection="descending"]:-moz-system-metric(windows-classic) {
  list-style-image: url("chrome://global/skin/tree/sort-dsc-classic.png");
}



.tree-columnpicker-icon {
  list-style-image: url("chrome://global/skin/tree/columnpicker.gif");
}



treechildren::-moz-tree-twisty {
  -moz-padding-end: 4px;
  padding-top: 1px;
  width: 9px; 
  list-style-image: url("chrome://global/skin/tree/twisty-clsd.png");
}

treechildren::-moz-tree-twisty(open) {
  width: 9px; 
  list-style-image: url("chrome://global/skin/tree/twisty-open.png");
}

treechildren::-moz-tree-indentation {
  width: 18px;
}



treechildren.gridlines::-moz-tree-cell {
  border-right: 1px solid transparent !important;
  border-bottom: 1px solid transparent !important;
}

treechildren.gridlines::-moz-tree-row {
  border: none;
}



treechildren::-moz-tree-row(selected, editing) {
  background-color: transparent;
  border: none;
}

treechildren::-moz-tree-cell-text(selected, editing) {
  color: inherit;
}

.tree-input {
  -moz-appearance: none;
  border: 1px solid Highlight;
  -moz-border-top-colors: Highlight;
  -moz-border-bottom-colors: Highlight;
  -moz-border-left-colors: Highlight;
  -moz-border-right-colors: Highlight;
  margin: 0;
  -moz-margin-start: -4px;
  padding: 1px;
}

%ifdef XP_WIN
@media not all and (-moz-os-version: windows-xp) {
  

  treechildren::-moz-tree-indentation {
    width: 12px;
  }

  treechildren::-moz-tree-twisty {
    -moz-padding-end: 1px;
    width: 9px;
  }

  treechildren::-moz-tree-twisty(hover) {
    list-style-image: url("chrome://global/skin/tree/twisty-clsd-hover.png");
  }

  treechildren::-moz-tree-twisty(hover, open) {
    list-style-image: url("chrome://global/skin/tree/twisty-open-hover.png");
  }

  treechildren:-moz-locale-dir(rtl)::-moz-tree-twisty {
    list-style-image: url("chrome://global/skin/tree/twisty-clsd-rtl.png");
  }

  treechildren:-moz-locale-dir(rtl)::-moz-tree-twisty(open) {
    list-style-image: url("chrome://global/skin/tree/twisty-open-rtl.png");
  }

  treechildren:-moz-locale-dir(rtl)::-moz-tree-twisty(hover) {
    list-style-image: url("chrome://global/skin/tree/twisty-clsd-hover-rtl.png");
  }

  treechildren:-moz-locale-dir(rtl)::-moz-tree-twisty(hover, open) {
    list-style-image: url("chrome://global/skin/tree/twisty-open-hover-rtl.png");
  }

  @media (-moz-windows-default-theme) {
    treechildren:not(.autocomplete-treebody)::-moz-tree-row {
      height: 1.8em;
      color: -moz-FieldText;
      -moz-margin-start: 1px;
      -moz-margin-end: 1px;
      border-width: 1px;
      border-color: transparent;
      background-repeat: no-repeat;
      background-size: 100% 100%;
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected) {
      -moz-border-top-colors: @selectedBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-right-colors: @selectedBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-left-colors: @selectedBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-bottom-colors: @selectedBorderColor@ @whiteOpacityBottomBorderColor@;
      background-image: linear-gradient(@selectedGradientColor2@, @selectedGradientColor2@);
      background-color: transparent;
      outline: 1px solid @whiteOpacityBorderColor@;
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-row(current, focus) {
      border-style: solid;
      -moz-border-top-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-right-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-left-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-bottom-colors: @hoverAndFocusBorderColor@ @whiteOpacityBottomBorderColor@;
      outline: 1px solid @whiteOpacityBorderColor@;
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected, focus),
    treechildren::-moz-tree-row(dropOn) {
      -moz-border-top-colors: @selectedFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-right-colors: @selectedFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-left-colors: @selectedFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-bottom-colors: @selectedFocusBorderColor@ @whiteOpacityBottomBorderColor@;
      background-image: linear-gradient(@selectedFocusGradientColor2@, @selectedFocusGradientColor2@);
      background-color: transparent;
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected, current, focus) {
      border-style: solid;
      -moz-border-top-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-right-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-left-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-bottom-colors: @hoverAndFocusBorderColor@ @whiteOpacityBottomBorderColor@;
      background-image: linear-gradient(@hoverAndCurrentFocusGradientColor2@, @hoverAndCurrentFocusGradientColor2@);
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-row(hover) {
      -moz-border-top-colors: @hoverBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-right-colors: @hoverBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-left-colors: @hoverBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-bottom-colors: @hoverBorderColor@ @whiteOpacityBottomBorderColor@;
      background-image: linear-gradient(@hoverGradientColor2@, @hoverGradientColor2@);
      outline: 1px solid @whiteOpacityBorderColor@;
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-row(hover, current) {
      -moz-border-top-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-right-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-left-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-bottom-colors: @hoverAndFocusBorderColor@ @whiteOpacityBottomBorderColor@;
      background-image: linear-gradient(@hoverGradientColor2@, @hoverGradientColor2@);
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-row(hover, selected) {
      -moz-border-top-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-right-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-left-colors: @hoverAndFocusBorderColor@ @whiteOpacityBorderColor@;
      -moz-border-bottom-colors: @hoverAndFocusBorderColor@ @whiteOpacityBottomBorderColor@;
      background-image: linear-gradient(@hoverAndCurrentFocusGradientColor2@, @hoverAndCurrentFocusGradientColor2@);
    }

    tree[disabled="true"] > treechildren::-moz-tree-row {
      background: none;
      -moz-border-top-colors: transparent;
      -moz-border-right-colors: transparent;
      -moz-border-left-colors: transparent;
      -moz-border-bottom-colors: transparent;
    }

    treechildren::-moz-tree-cell(dropOn) {
      background-image: none;
      background-color: transparent;
      border-radius: 0;
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-cell-text {
      padding-bottom: initial;
      border-color: transparent;
      background-color: transparent;
    }

    treechildren:not(.autocomplete-treebody)::-moz-tree-cell-text(selected, focus) {
      color: -moz-DialogText;
    }

    @media (-moz-os-version: windows-vista),
           (-moz-os-version: windows-win7) {
      treechildren:not(.autocomplete-treebody)::-moz-tree-row {
        border-width: 2px;
        border-radius: 3px;
        -moz-outline-radius: 3px;
      }

      treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected) {
        background-image: linear-gradient(@selectedGradientColor1@, @selectedGradientColor2@);
      }

      treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected, focus),
      treechildren::-moz-tree-row(dropOn) {
        background-image: linear-gradient(@selectedFocusGradientColor1@, @selectedFocusGradientColor2@);
      }

      treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected, current, focus) {
        background-image: linear-gradient(@hoverAndCurrentFocusGradientColor1@, @hoverAndCurrentFocusGradientColor2@);
      }

      treechildren:not(.autocomplete-treebody)::-moz-tree-row(hover) {
        background-image: linear-gradient(@hoverGradientColor1@, @hoverGradientColor2@);
      }

      treechildren:not(.autocomplete-treebody)::-moz-tree-row(hover, current) {
        background-image: linear-gradient(@hoverGradientColor1@, @hoverGradientColor2@);
      }

      treechildren:not(.autocomplete-treebody)::-moz-tree-row(hover, selected) {
        background-image: linear-gradient(@hoverAndCurrentFocusGradientColor1@, @hoverAndCurrentFocusGradientColor2@);
      }
    }
  }
}
%endif
