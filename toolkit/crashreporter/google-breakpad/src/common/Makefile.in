# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH		= @DEPTH@
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

LIBRARY_NAME	= breakpad_common_s
ifneq (WINNT,$(OS_TARGET))
ifdef MOZ_CRASHREPORTER
HOST_LIBRARY_NAME = host_breakpad_common_s
endif
endif

LOCAL_INCLUDES 	= -I$(srcdir)/..

CPPSRCS	= \
  string_conversion.cc \
  module.cc \
  unique_string.cc \
  $(NULL)

ifneq (WINNT,$(OS_TARGET))
CPPSRCS += \
  md5.cc \
  dwarf/bytereader.cc \
  dwarf_cfi_to_module.cc \
  dwarf/dwarf2reader.cc \
  dwarf_cu_to_module.cc \
  language.cc \
  dwarf/dwarf2diehandler.cc \
  dwarf_line_to_module.cc \
  $(NULL)
ifdef MOZ_CRASHREPORTER
HOST_CPPSRCS = \
  string_conversion.cc \
  module.cc \
  unique_string.cc \
  md5.cc \
  dwarf_cfi_to_module.cc \
  dwarf_cu_to_module.cc \
  language.cc \
  stabs_to_module.cc \
  stabs_reader.cc \
  dwarf_line_to_module.cc \
  $(NULL)
endif
endif

ifeq ($(OS_ARCH),Linux)
CPPSRCS += \
  linux/dump_symbols.cc \
  linux/elf_symbols_to_module.cc
endif

ifeq ($(OS_ARCH),Darwin)
CMMSRCS += \
  mac/dump_syms.mm
endif

CSRCS = \
  convert_UTF.c \
  $(NULL)

ifeq ($(OS_TARGET),Android)
VPATH += $(srcdir)/android
SSRCS := breakpad_getcontext.S
TARGET_LOCAL_INCLUDES += -I$(topsrcdir)/toolkit/crashreporter/google-breakpad/src/common/android/include/
DEFINES += -DNO_STABS_SUPPORT
else
ifneq (WINNT,$(OS_TARGET))
CPPSRCS += \
  stabs_to_module.cc \
  stabs_reader.cc \
  $(NULL)
endif
endif

ifeq (gonk,$(MOZ_WIDGET_TOOLKIT))
DEFINES += -DELFSIZE=32
endif

ifdef MOZ_PLATFORM_MAEMO
# The GCC in scratchbox crashes writing DWARF debug info for language.cc.
# Since we don't really need debug symbols for the host tools anyway,
# just get rid of debug options.
HOST_CXXFLAGS = $(patsubst -g%,,$(CXXFLAGS))
endif

# This kind of sucks.
ifeq (Linux,$(OS_ARCH))
HOST_CXXFLAGS += -DHAVE_A_OUT_H
OS_CXXFLAGS += -DHAVE_A_OUT_H
endif
ifeq (Darwin,$(OS_ARCH))
HOST_CXXFLAGS += -DHAVE_MACH_O_NLIST_H
OS_CXXFLAGS += -DHAVE_MACH_O_NLIST_H
endif

ifneq (WINNT,$(OS_TARGET))
ifdef MOZ_CRASHREPORTER
HOST_CSRCS = $(CSRCS)
endif
endif

# need static lib
FORCE_STATIC_LIB = 1

include $(topsrcdir)/config/rules.mk

ifneq (WINNT,$(OS_TARGET))
# Headers from this directory are included as "common/header.h". Having
# -I$(srcdir) on the command line makes us use common/memory.h when
# <memory.h> is included from system headers, which is not intended.
INCLUDES = $(LOCAL_INCLUDES) -I$(DIST)/include
endif
